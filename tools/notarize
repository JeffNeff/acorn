#!/bin/bash
set -e

cd $(dirname $0)/..

: ${SIGN=""}
: ${NOTARIZE=""}
: ${AC_BUNDLE="io.acorn.cli"}

BINARY="$1"
DIR="releases/mac_darwin_all"
DMG="releases/$2.dmg"
CHECKSUMS="releases/checksums.txt"

if [[ -z "${SIGN}" && "$(uname)" == "Darwin" ]]; then
  SIGN="1"
fi

if [[ -z "${NOTARIZE}" && "$(uname)" == "Darwin" && "${GITHUB_REF}" =~ "refs/tags/v" ]]; then
  echo "Enabling notarize"
  NOTARIZE="1"
fi

echo "SIGN=${SIGN} NOTARIZE=${NOTARIZE} BUNDLE=${AC_BUNDLE} BINARY=${BINARY} DMG=${DMG}"


if [[ -n "${SIGN}" || -n "${NOTARIZE}" ]]; then
  echo "Setting up Keychain…"
  KEYCHAIN_PASSWORD=letmein
  KEYCHAIN=./app-signing.keychain-db
  DOMAIN=common
  DEF=$(security default-keychain -d $DOMAIN | cut -f 2 -d '"')
  LIST=$(security list-keychains -d $DOMAIN | grep -v "System.keychain" | xargs)

  function cleanup {
    echo "Cleaning up Keychain"
    rm -f signing.p12
    security lock-keychain $KEYCHAIN
    if [[ -n "${DEF}" ]]; then
      security default-keychain -d $DOMAIN -s $DEF || true
    fi
    #security list-keychains -d $DOMAIN -s $LIST || true
    exit 0
  }
  trap cleanup EXIT

  if ! security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN >/dev/null; then
    echo "Creating Keychain"
    security delete-keychain $KEYCHAIN || true
    security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN
    echo "${AC_P12}" | base64 --decode > signing.p12
    security set-keychain-settings -lut 86400 $KEYCHAIN
    security import signing.p12 -P "${AC_P12_PASSWORD}" -A -t cert -f pkcs12 -k $KEYCHAIN
  fi

  if ! security list-keychains | grep $KEYCHAIN >/dev/null; then
    echo "Setting keychain list"
    security list-keychains -d $DOMAIN -s $KEYCHAIN $LIST
  fi

  security default-keychain -d $DOMAIN -s $KEYCHAIN
  security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN
fi

if [[ -n "${SIGN}" ]]; then
  echo "Signing"
  codesign -s "${AC_IDENTITY}" -f -v --timestamp --options runtime "${BINARY}"
else
  echo "Skipping signing"
  exit 0
fi

if [[ -n "${NOTARIZE}" ]]; then
  echo "Notarizing…"

  cp LICENSE README.md "${DIR}/"
  hdiutil create -volname "Acorn" -size 1g -srcfolder "${DIR}" -ov -format UDZO "${DMG}"
  which gon || (go install github.com/mitchellh/gon/cmd/gon@latest)

  cat <<EOF > "gon.hcl"
notarize {
  path = "${DMG}"
  bundle_id = "${AC_BUNDLE}"
  staple = true
}
EOF

  gon gon.hcl
  shasum -a 256 "${DMG}" >> "${CHECKSUMS}"

  rm gon.hcl
else
  echo "Skipping notarizing"
fi

