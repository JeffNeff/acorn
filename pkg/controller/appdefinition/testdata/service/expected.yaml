kind: Namespace
apiVersion: v1
metadata:
  name: app-created-namespace
  labels:
    "acorn.io/app-namespace": "app-namespace"
    "acorn.io/app-name": "app-name"
    "acorn.io/managed": "true"
    pod-security.kubernetes.io/enforce: baseline

---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: oneimage
  namespace: app-created-namespace
  labels:
    "acorn.io/app-namespace": "app-namespace"
    "acorn.io/app-name": "app-name"
    "acorn.io/container-name": "oneimage"
    "acorn.io/managed": "true"
spec:
  selector:
    matchLabels:
      "acorn.io/app-namespace": "app-namespace"
      "acorn.io/app-name": "app-name"
      "acorn.io/container-name": "oneimage"
      "acorn.io/managed": "true"
  template:
    metadata:
      labels:
        "acorn.io/app-namespace": "app-namespace"
        "acorn.io/app-name": "app-name"
        "acorn.io/container-name": "oneimage"
        "acorn.io/managed": "true"
      annotations:
        acorn.io/container-spec: '{"build":{"context":".","dockerfile":"Dockerfile"},"image":"image-name","ports":[{"containerPort":81,"port":80,"protocol":"http","publish":true}],"sidecars":{"left":{"image":"foo","ports":[{"containerPort":91,"port":90,"protocol":"https","publish":true}]}}}'
    spec:
      enableServiceLinks: false
      shareProcessNamespace: true
      automountServiceAccountToken: false
      containers:
        - name: oneimage
          image: "index.docker.io/library/test@image-name"
          ports:
            - containerPort: 81
              protocol: "TCP"
        - name: left
          image: "index.docker.io/library/test@foo"
          ports:
            - containerPort: 91
              protocol: "TCP"
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: buildimage
  namespace: app-created-namespace
  labels:
    "acorn.io/app-namespace": "app-namespace"
    "acorn.io/app-name": "app-name"
    "acorn.io/container-name": "buildimage"
    "acorn.io/managed": "true"
spec:
  selector:
    matchLabels:
      "acorn.io/app-namespace": "app-namespace"
      "acorn.io/app-name": "app-name"
      "acorn.io/container-name": "buildimage"
      "acorn.io/managed": "true"
  template:
    metadata:
      labels:
        "acorn.io/app-namespace": "app-namespace"
        "acorn.io/app-name": "app-name"
        "acorn.io/container-name": "buildimage"
        "acorn.io/managed": "true"
      annotations:
        acorn.io/container-spec: '{"build":{"context":".","dockerfile":"custom-dockerfile"},"image":"sha256:build-image","ports":[{"containerPort":81,"port":80,"protocol":"http","publish":true},{"containerPort":91,"port":443,"protocol":"https","publish":true}]}'
    spec:
      shareProcessNamespace: true
      enableServiceLinks: false
      automountServiceAccountToken: false
      containers:
        - name: buildimage
          image: "index.docker.io/library/test@sha256:build-image"
          ports:
            - containerPort: 81
              protocol: "TCP"
            - containerPort: 91
              protocol: "TCP"
---
kind: Service
apiVersion: v1
metadata:
  name: oneimage-publish-01234567890a
  namespace: app-created-namespace
  labels:
    "acorn.io/app-namespace": "app-namespace"
    "acorn.io/app-name": "app-name"
    "acorn.io/container-name": "oneimage"
    "acorn.io/managed": "true"
spec:
  type: LoadBalancer
  ports:
    - port: 90
      targetPort: 91
      protocol: "TCP"
      appProtocol: "HTTPS"
      name: "90"
  selector:
    "acorn.io/app-namespace": "app-namespace"
    "acorn.io/app-name": "app-name"
    "acorn.io/container-name": "oneimage"
    acorn.io/managed: "true"
---
kind: Service
apiVersion: v1
metadata:
  name: oneimage
  namespace: app-created-namespace
  labels:
    "acorn.io/app-namespace": "app-namespace"
    "acorn.io/app-name": "app-name"
    "acorn.io/container-name": "oneimage"
    "acorn.io/managed": "true"
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 81
      protocol: "TCP"
      appProtocol: "HTTP"
      name: "80"
    - port: 90
      targetPort: 91
      protocol: "TCP"
      appProtocol: "HTTPS"
      name: "90"
  selector:
    "acorn.io/app-namespace": "app-namespace"
    "acorn.io/app-name": "app-name"
    "acorn.io/container-name": "oneimage"
    acorn.io/managed: "true"
---
kind: Service
apiVersion: v1
metadata:
  name: buildimage-publish-01234567890a
  namespace: app-created-namespace
  labels:
    "acorn.io/app-namespace": "app-namespace"
    "acorn.io/app-name": "app-name"
    "acorn.io/container-name": "buildimage"
    "acorn.io/managed": "true"
spec:
  type: LoadBalancer
  ports:
    - port: 443
      targetPort: 91
      protocol: "TCP"
      appProtocol: "HTTPS"
      name: "443"
  selector:
    "acorn.io/app-namespace": "app-namespace"
    "acorn.io/app-name": "app-name"
    "acorn.io/container-name": "buildimage"
    acorn.io/managed: "true"
---
kind: Service
apiVersion: v1
metadata:
  name: buildimage
  namespace: app-created-namespace
  labels:
    "acorn.io/app-namespace": "app-namespace"
    "acorn.io/app-name": "app-name"
    "acorn.io/container-name": "buildimage"
    "acorn.io/managed": "true"
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 81
      protocol: "TCP"
      appProtocol: "HTTP"
      name: "80"
    - port: 443
      targetPort: 91
      protocol: "TCP"
      appProtocol: "HTTPS"
      name: "443"
  selector:
    "acorn.io/app-namespace": "app-namespace"
    "acorn.io/app-name": "app-name"
    "acorn.io/container-name": "buildimage"
    acorn.io/managed: "true"
---
kind: Ingress
apiVersion: networking.k8s.io/v1
metadata:
  name: oneimage
  namespace: app-created-namespace
  labels:
    "acorn.io/app-namespace": "app-namespace"
    "acorn.io/app-name": "app-name"
    "acorn.io/container-name": "oneimage"
    "acorn.io/managed": "true"
  annotations:
    acorn.io/container-name: oneimage
    acorn.io/hostnames: localhost
    acorn.io/port-number: "81"
spec:
  rules:
    - host: localhost
      http:
        paths:
          - backend:
              service:
                name: oneimage
                port:
                  number: 80
            path: /
            pathType: Prefix
    - host: oneimage.app-name.app-namespace.localhost
      http:
        paths:
          - backend:
              service:
                name: oneimage
                port:
                  number: 80
            path: /
            pathType: Prefix
---
kind: Ingress
apiVersion: networking.k8s.io/v1
metadata:
  name: buildimage
  namespace: app-created-namespace
  labels:
    "acorn.io/app-namespace": "app-namespace"
    "acorn.io/app-name": "app-name"
    "acorn.io/container-name": "buildimage"
    "acorn.io/managed": "true"
  annotations:
    acorn.io/container-name: buildimage
    acorn.io/hostnames: buildimage.app-name.app-namespace.localhost
    acorn.io/port-number: "81"
spec:
  rules:
    - host: buildimage.app-name.app-namespace.localhost
      http:
        paths:
          - backend:
              service:
                name: buildimage
                port:
                  number: 80
            path: /
            pathType: Prefix
---
kind: AppInstance
apiVersion: acorn.io/v1
metadata:
  uid: 01234567890abcdef
  name: app-name
  namespace: app-namespace
spec:
  publishAllPorts: true
  image: test
  endpoints:
    - target: oneimage
      hostname: localhost
status:
  namespace: app-created-namespace
  appSpec:
    containers:
      oneimage:
        sidecars:
          left:
            image: "foo"
            ports:
              - port: 90
                containerPort: 91
                protocol: https
                publish: true
        ports:
          - port: 80
            containerPort: 81
            publish: true
            protocol: http
        image: "image-name"
        build:
          dockerfile: "Dockerfile"
          context: "."
      buildimage:
        ports:
          - port: 80
            containerPort: 81
            publish: true
            protocol: http
          - port: 443
            containerPort: 91
            publish: true
            protocol: https
        image: "sha256:build-image"
        build:
          dockerfile: "custom-dockerfile"
          context: "."
  conditions:
    defined:
      success: true
